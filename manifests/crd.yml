apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: resourcesyncs.sinker.influxdata.io
spec:
  group: sinker.influxdata.io
  names:
    categories: []
    kind: ResourceSync
    plural: resourcesyncs
    shortNames: []
    singular: resourcesync
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for ResourceSyncSpec via `CustomResource`
        properties:
          spec:
            properties:
              mappings:
                items:
                  properties:
                    fromFieldPath:
                      description: If `None` then to_field_path cannot be `None`.
                      nullable: true
                      type: string
                    toFieldPath:
                      description: If `None` then from_field_path cannot be `None`.
                      nullable: true
                      type: string
                  type: object
                type: array
              source:
                properties:
                  cluster:
                    description: |-
                      A missing clusterRef means "this (local) cluster" and the namespace where resourceRef will be searched in is the namespace of the ResourceSync resource itself. A user cannot thus violate RBAC by referencing secrets in a namespace they don't have rights to by leveraging sinker.

                      If a remote cluster reference is provided, then the namespace is taken from the cluster connection parameters. RBAC is still honoured because sinker can only access resources for which the provided token has rights to.
                    nullable: true
                    properties:
                      kubeConfig:
                        properties:
                          secretRef:
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                            required:
                            - key
                            - name
                            type: object
                        required:
                        - secretRef
                        type: object
                      namespace:
                        description: If present, overrides the default namespace defined in the provided kubeConfig
                        nullable: true
                        type: string
                    required:
                    - kubeConfig
                    type: object
                  resourceRef:
                    description: This is a reference to a resource that lives in the cluster specified by the sister cluster field. The resourceRef GVKN doesn't define the namespace explicitly. Instead, the namespace defends on the cluster reference.
                    properties:
                      apiVersion:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    type: object
                required:
                - resourceRef
                type: object
              target:
                properties:
                  cluster:
                    description: |-
                      A missing clusterRef means "this (local) cluster" and the namespace where resourceRef will be searched in is the namespace of the ResourceSync resource itself. A user cannot thus violate RBAC by referencing secrets in a namespace they don't have rights to by leveraging sinker.

                      If a remote cluster reference is provided, then the namespace is taken from the cluster connection parameters. RBAC is still honoured because sinker can only access resources for which the provided token has rights to.
                    nullable: true
                    properties:
                      kubeConfig:
                        properties:
                          secretRef:
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                            required:
                            - key
                            - name
                            type: object
                        required:
                        - secretRef
                        type: object
                      namespace:
                        description: If present, overrides the default namespace defined in the provided kubeConfig
                        nullable: true
                        type: string
                    required:
                    - kubeConfig
                    type: object
                  resourceRef:
                    description: This is a reference to a resource that lives in the cluster specified by the sister cluster field. The resourceRef GVKN doesn't define the namespace explicitly. Instead, the namespace defends on the cluster reference.
                    properties:
                      apiVersion:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    type: object
                required:
                - resourceRef
                type: object
            required:
            - source
            - target
            type: object
          status:
            nullable: true
            properties:
              conditions:
                description: Conditions describes the current observed state of the
                  CloudDedicatedCluster
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                        - "True"
                        - "False"
                        - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                  - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        title: ResourceSync
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sinkercontainers.sinker.influxdata.io
spec:
  group: sinker.influxdata.io
  names:
    categories: []
    kind: SinkerContainer
    plural: sinkercontainers
    shortNames: []
    singular: sinkercontainer
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: This is a handy generic resource container for use as ResourceSync sources or targets
        properties:
          spec:
            description: This is an arbitrary object
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}

